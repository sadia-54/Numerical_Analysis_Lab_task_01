function value = newton_raphson ()
  %define the function
function [y, dy] = f(x)
    y = x.^3 - 3*x - 5;
    dy = 3*x.^2 - 3;
end
% initial value of x
x = 2;
tolerance = 1e-6;
root = [];
Slope = [];
iterations = 0;

%newton raphson algorithm
while true
    [y, dy] = f(x);
    x1 = x - y / dy;
    root = [root; x1];
    Slope = [Slope; [x, y, dy]];

    if abs(x1 - x) < tolerance
        break;
    end

    x = x1;
    iterations = iterations++;
end

fprintf('%d iterations need: %f\n', iterations, root(end));


x = 0:0.1:05;
[y, dy] = f(x);
% figure
figure;
plot(x, y);
hold on;
plot(root, f(root), 'ro');
for i = 1:length(root)
    x_tangent = root(i) - 1:0.01:root(i) + 1;
    y_tangent = Slope(i, 2) + Slope(i, 3) * (x_tangent - root(i));
    plot(x_tangent, y_tangent, 'g--');
end
xlabel('x');
ylabel('functions value');
title('Newton-Raphson Method');
legend('f(x)', 'Roots', 'Tangent Lines');
grid on;

endfunction
